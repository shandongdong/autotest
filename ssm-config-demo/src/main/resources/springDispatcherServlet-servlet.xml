<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--此文件负责整个 spring mvc 的配置-->

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>

    <!--静态资源映射-->
    <mvc:resources mapping="/css/**" location="/WEB-INF/statics/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/statics/js/"/>
    <mvc:resources mapping="/image/**" location="/WEB-INF/statics/images/"/>

    <!--  1. 组件扫描 -->
    <context:component-scan base-package="com.github.shandongdong" use-default-filters="false">
        <!-- 使用指定扫描，让MVC只扫描Controller里面的注解 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--  2. 视图解析器
         工作机制:  prefix + 请求处理方法的返回值 + suffix  =  物理视图路径.
                  /WEB-INF/views/success.jsp
        WEB-INF: 是服务器内部路径。 不能直接从浏览器端访问该路径下的资源. 但是可以内部转发进行访问
    -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--    配置文件上传。 这里必须配置bean id ,而且名称必须为 multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="maxUploadSize" value="10485760"></property>
    </bean>

    <!-- 配置拦截器。 多个拦截器按照配置顺序执行，但是拦截器方法执行顺序是按照迭代的顺序来执行的。preHandle()是按照从小到大，而postHandle()和afterCompletion()是按照从大到小-->
    <mvc:interceptors>
        <!-- 拦截所有请求 -->
        <bean class="com.github.shandongdong.ssm.interceptor.MyFirstInterceptor"/>
        <bean class="com.github.shandongdong.ssm.interceptor.MySecondInterceptor"/>

        <!-- 指定拦截请求 -->
        <!--        <mvc:interceptor>-->
        <!--            <mvc:mapping path="/test/testJson"/>    &lt;!&ndash; 指定拦截请求 &ndash;&gt;-->
        <!--            &lt;!&ndash;            <mvc:exclude-mapping path="/test/testUpload"/>      &lt;!&ndash; 指定不拦截请求&ndash;&gt;&ndash;&gt;-->
        <!--            <bean class="com.github.shandongdong.ssm.interceptor.MyFirstInterceptor"/>-->
        <!--        </mvc:interceptor>-->
    </mvc:interceptors>

</beans>