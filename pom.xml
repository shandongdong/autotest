<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--    这个pom作为父项目统一管理所有依赖的版本信息  -->
    <groupId>com.github.shandongdong</groupId>
    <artifactId>autotest</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--    配置聚合：包含的子模块-->
    <modules>
        <!--        指定各个子工程相对路径 -->
        <module>notification</module>
        <module>quartz</module>
        <module>ssm-config-demo</module>
    </modules>
    <!--    这里打包方式需要改为pom -->
    <packaging>pom</packaging>
    <name>autotest</name>
    <url>https://github.com/shandongdong</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- 统一管理SSM整合包：Spring、Spring MVC、MyBatis、Spring整合MyBatis依赖 -->
        <spring.version>5.1.6.RELEASE</spring.version>
        <spring-mvc.version>5.1.6.RELEASE</spring-mvc.version>
        <mybatis.versin>3.4.6</mybatis.versin>
        <mybatis-spring.version>2.0.1</mybatis-spring.version>
    </properties>
    <!-- 统一管理依赖版本问题 -->
    <dependencyManagement>
        <dependencies>
            <!-- 开始：Servlet 核心包 -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>4.0.1</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>javax.servlet.jsp-api</artifactId>
                <version>2.3.3</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>
            <!-- 结束：Servlet 核心包  -->
            <!-- 开始：Spring 依赖包 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.9.2</version>
            </dependency>
            <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>0.9.5.4</version>
            </dependency>
            <!-- 结束：Spring 依赖包 -->
            <!-- 开始：Spring MVC -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring-mvc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-mvc.version}</version>
            </dependency>
            <!-- 文件上传、下载 -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.4</version>
            </dependency>
            <!-- 结束：Spring MVC -->
            <!-- 开始：MyBatis -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.versin}</version>
            </dependency>
            <!-- 结束：MyBatis -->
            <!-- 开始：SSM整合适配包，用于整合 Spring 和 MyBatis。SpringMVC 只需要导入jar包然后配置springDispacherServlet-servlet.xml文件即可 -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <!-- 结束：SSM整合适配包，用于整合 Spring 和 MyBatis。SpringMVC 只需要导入jar包然后配置springDispacherServlet-servlet.xml文件即可 -->
            <!-- 开始：mysql驱动包 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.47</version>
            </dependency>
            <!-- 结束：mysql驱动包 -->
            <!-- 开始: lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.14.4</version>
            </dependency>
            <!-- 结束: lombok -->
            <!-- 开始: 日志 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.8.0-beta2</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.8.0-beta2</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
            <!-- 结束: 日志 -->
            <!-- 开始：JSON  -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.54</version>
            </dependency>
            <!-- 结束：JSON  -->
            <!-- 开始: TestNG依赖jar包 -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.14.3</version>
            </dependency>
            <!-- 结束: TestNG依赖jar包 -->
        </dependencies>
    </dependencyManagement>

    <!--    配置当前工程中需要使用的插件 -->
    <build>
        <!-- 部署之后最终生成jar包的名称 -->
        <finalName>AutoTest</finalName>
        <plugins>
            <plugin>
                <!-- cargo是一家专门从事Servlet容器启动的组织。可以通过maven插件、Java API、Ant tasks等多种方式完成部署。
                  官网： https://codehaus-cargo.github.io/cargo/Tomcat+9.x.html -->
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.7.6</version>
                <!-- 针对插件进行的配置 -->
                <configuration>
                    <!-- 配置当前系统中容器的位置 -->
                    <container>
                        <containerId>tomcat9x</containerId>
                        <home>D:/software/apache-tomcat-9.0.17</home>
                    </container>
                    <configuration>
                        <type>existing</type>
                        <home>D:/software/apache-tomcat-9.0.17</home>
                        <!--  配置tomcat端口 -->
                        <properties>
                            <cargo.servlet.port>8080</cargo.servlet.port>
                        </properties>
                    </configuration>
                </configuration>
                <!-- 配置插件在什么阶段执行 -->
                <executions>
                    <execution>
                        <id>cargo-run</id>
                        <!-- 声明周期的阶段 -->
                        <phase>install</phase>
                        <goals>
                            <!-- 插件的目标 -->
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>